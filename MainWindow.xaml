<Window x:Class="SchematicExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SchematicExplorer"
        x:ClassModifier="internal"
        Name="SchematicView"
        mc:Ignorable="d"
        Title="Schematic Explorer" Height="768" Width="1024">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
        <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
            <Grid>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransformHeightOnly, ElementName=SchematicView}" Height="3" Cursor="SizeNS" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransformWidthOnly, ElementName=SchematicView}" Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransformWidthOnly, ElementName=SchematicView}" Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransformHeightOnly, ElementName=SchematicView}" Height="3" Cursor="SizeNS" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransform, ElementName=SchematicView}" Width="7" Height="7" Cursor="SizeNWSE" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransform, ElementName=SchematicView}" Width="7" Height="7" Cursor="SizeNESW" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransform, ElementName=SchematicView}" Width="7" Height="7" Cursor="SizeNESW" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransform, ElementName=SchematicView}" Width="7" Height="7" Cursor="SizeNWSE" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                <local:RotateThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransform, ElementName=SchematicView}" Width="10" Height="10" Cursor="Hand" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                <local:MoveThumb DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=.}" RenderTransformOrigin="0.5,0.5" RenderTransform="{Binding ResizeControlTransform, ElementName=SchematicView}" Width="10" Height="10" Cursor="SizeAll" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="AnnotationElementStyle" TargetType="ContentControl">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <Grid>
                            <Grid>
                                <Rectangle IsHitTestVisible="{Binding IsCtrlPressed, ElementName=SchematicView}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{Binding Color}" Stroke="{Binding StrokeColor}" StrokeThickness="{Binding AnnotationStrokeThickness, ElementName=SchematicView}" />
                                <Viewbox IsHitTestVisible="False" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <TextBlock IsHitTestVisible="False" Text="{Binding Name}" TextAlignment="Center">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="Black" Opacity="0.75" />
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Viewbox>
                            </Grid>
                            <Control x:Name="ResizeDecorator" Template="{StaticResource ResizeDecoratorTemplate}" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter TargetName="ResizeDecorator" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#404060" ClipToBounds="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Viewbox Visibility="{Binding IsLoadingInProgress, Converter={StaticResource booleanToVisibilityConverter}}" Grid.Row="1" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBlock Text="Loading, please wait."/>
        </Viewbox>
        <Border Grid.Row="1" Grid.RowSpan="2" Name="MapContainer" FlowDirection="LeftToRight">
            <Viewbox Name="MapViewbox" Stretch="Uniform">
                <Canvas Name="Map" Background="#FFFFFF" Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}" >
                    <Canvas Name="AnnotationLayer0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding IsOverlayEnabled0, Converter={StaticResource booleanToVisibilityConverter}}" />
                    <Canvas Name="AnnotationLayer1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding IsOverlayEnabled1, Converter={StaticResource booleanToVisibilityConverter}}" />
                    <Canvas Name="AnnotationLayer2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding IsOverlayEnabled2, Converter={StaticResource booleanToVisibilityConverter}}" />
                </Canvas>
            </Viewbox>
        </Border>
        <StackPanel Grid.Row="1" Margin="5,10,0,0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Button Content="⟲" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Click="RotateLeftEventHandler"/>
            <Button Content="⟳" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Click="RotateRightEventHandler"/>
        </StackPanel>
        <StackPanel Grid.Row="1" Margin="15,35,0,0">
            <Button Content="+" HorizontalAlignment="Left" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Click="ZoomInEventHandler"/>
            <Button Content="-" HorizontalAlignment="Left" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Click="ZoomOutEventHandler"/>
        </StackPanel>
        <StackPanel Grid.Row="0" HorizontalAlignment="Center" Orientation="Horizontal">
            <Button Margin="5,0" Content="Save" Click="SaveCommentsEventHandler"/>
            <Button Margin="5,0" Content="Update Line Scale" Click="UpdateLineScaleEventHandler"/>
            <Button Margin="5,0" Content="Reset Transform" Click="RestoreDefaultTransformEventHandler"/>
        </StackPanel>
        <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Vertical">
            <TextBlock Text="Annotation Layers" Background="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <CheckBox Margin="5,0" IsChecked="{Binding IsOverlayEnabled0}" VerticalAlignment="Center">
                <TextBlock Text="Layer 1 (Red)" Background="White" />
            </CheckBox>
            <CheckBox Margin="5,0" IsChecked="{Binding IsOverlayEnabled1}" VerticalAlignment="Center">
                <TextBlock Text="Layer 2 (Green)" Background="White" />
            </CheckBox>
            <CheckBox Margin="5,0" IsChecked="{Binding IsOverlayEnabled2}" VerticalAlignment="Center">
                <TextBlock Text="Layer 3 (Blue)" Background="White" />
            </CheckBox>
        </StackPanel>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="1" Grid.Column="0" Content="Name" Background="White" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsAnnotationSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBox Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" MinWidth="100" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding SelectedAnnotation.Name, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsAnnotationSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <Label Grid.Row="1" Grid.Column="3" Content="Description" Background="White" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsAnnotationSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBox Grid.Row="0" Grid.RowSpan="2" Grid.Column="4" MinWidth="100" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding SelectedAnnotation.Description, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsAnnotationSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <Button Grid.Row="1" Grid.Column="6" Content="Delete" Click="DeleteAnnotationEventHandler" Visibility="{Binding IsAnnotationSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <ComboBox Grid.Row="1" Grid.Column="7" SelectedIndex="{Binding SelectedAnnotationLayer}" Visibility="{Binding IsAnnotationSelected, Converter={StaticResource booleanToVisibilityConverter}}">
                <ComboBoxItem>Layer 1 (Red)</ComboBoxItem>
                <ComboBoxItem>Layer 2 (Green)</ComboBoxItem>
                <ComboBoxItem>Layer 3 (Blue)</ComboBoxItem>
            </ComboBox>

            <Label Grid.Row="1" Grid.Column="0" Content="ID" Background="White" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsElementSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBox Grid.Row="1" Grid.Column="1" Height="23" MinWidth="100" TextWrapping="Wrap" IsReadOnly="True" Text="{Binding SelectedElement.ID}" Visibility="{Binding IsElementSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <Label Grid.Row="1" Grid.Column="3" Content="Description" Background="White" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsElementSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBox Grid.Row="1" Grid.Column="4" Height="23" MinWidth="100" TextWrapping="Wrap" IsReadOnly="True" Text="{Binding SelectedElement.Description}" Visibility="{Binding IsElementSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <Label Grid.Row="1" Grid.Column="6" Content="Comments" Background="White" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsElementSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBox Grid.Row="0" Grid.RowSpan="2" Grid.Column="7" MinWidth="100" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding SelectedElement.Comments, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsElementSelected, Converter={StaticResource booleanToVisibilityConverter}}"/>
        </Grid>
    </Grid>
</Window>
